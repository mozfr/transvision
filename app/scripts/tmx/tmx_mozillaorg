#!/usr/bin/env php
<?php
namespace Transvision;

// Script should not be called from the Web
if (php_sapi_name() != 'cli') {
    die('Nope');
}

include __DIR__ . '/../../inc/init.php';

error_log('Mozilla.org: extraction of strings');

foreach (Files::getFoldersInPath(GIT . 'mozilla_org/') as $locale) {
    $path = GIT . "mozilla_org/{$locale}/";

    /*
        'hi' is a fake locale on mozilla.org: it's not actually supported,
        but we have a folder to enable legal documents in Bedrock. That
        doesn't mean that we need to create a TMX for it.
    */
    $excluded_locales = ['hi'];
    if (! is_dir($path) || in_array($locale, $excluded_locales)) {
        continue;
    }

    $mozilla_org_files = Dotlang::getLangFilesList($path);

    $mozilla_org_files = array_map(
        function ($item) use ($path) {
            return str_replace($path, '', $item);
        },
        $mozilla_org_files);

    $out_translation = '';
    $total_strings = 0;

    // Check if this is the reference locale
    $reference_locale = (Project::getReferenceLocale('mozilla_org') == $locale);

    foreach ($mozilla_org_files as $file) {
        $strings = Dotlang::getStrings(GIT . "mozilla_org/{$locale}/{$file}", $reference_locale);

        foreach ($strings as $english => $translation) {
            /*
                Remove empty strings. Lang files don't support empty strings, so
                they're actually missing and shouldn't be in the TMX.
            */
            if ($translation === '') {
                continue;
            }
            $output = function ($str1, $str2) use ($file, $english, $translation) {
                if (Strings::endsWith(strtolower($str2), '{ok}')) {
                    $str2 = trim(rtrim($str2, '{ok}'));
                }
                $array_line =
                    "'"
                   . Dotlang::generateStringID('mozilla_org/' . $file, $str1)
                   . "' => '"
                   . str_replace("'", "\\'", $str2)
                   . "',"
                   . "\n";

                return $array_line;
            };

            $out_translation .= $output($english, $translation);
            $total_strings += 1;
        }
    }

    $out_translation = "<?php\n\$tmx = [\n" . $out_translation . "];\n";

    Files::fileForceContents(TMX . "{$locale}/cache_{$locale}_mozilla_org.php", $out_translation);
    error_log("{$locale}: {$total_strings} strings");
}
